{"version":3,"sources":["components/API/API.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","App.js","index.js"],"names":["MY_KEY","BASE_URL","FetchAPI","searchInput","page","fetch","then","response","json","SearchBar","onSubmit","useState","setSearchInput","className","e","preventDefault","data","arrayImg","hits","finally","type","value","autoComplete","autoFocus","placeholder","onChange","target","ImageGalleryItem","map","i","src","webformatURL","alt","tags","largeImageURL","id","ImageGallery","openModal","onClick","ButtonLoadMore","loadMore","setPage","loader","setLoader","useEffect","color","height","width","timeout","modalRoot","document","querySelector","Modal","onClose","children","closeModal","code","nodeName","window","addEventListener","createPortal","App","setArrayImg","modalImg","setModalImg","showModal","setShowModal","scrollTo","top","documentElement","scrollHeight","behavior","closeModalEsc","removeEventListener","dataset","large","length","moreImg","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ef53ebb1.chunk.js","sourcesContent":["const MY_KEY = '23120149-b9b49e6d85d17734323f46136';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\nexport default function FetchAPI(searchInput, page = 1) {\r\n  return fetch(\r\n    `${BASE_URL}?q=${searchInput}&page=${page}&key=${MY_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => response.json());\r\n}\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FetchAPI from '../API/API';\n\nexport default function SearchBar({ onSubmit }) {\n  const [searchInput, setSearchInput] = useState('');\n\n  const formSubmit = e => {\n    e.preventDefault();\n\n    FetchAPI(searchInput)\n      .then(data =>\n        onSubmit({\n          arrayImg: data.hits,\n          searchInput: searchInput,\n        }),\n      )\n      .finally(setSearchInput(''));\n  };\n\n  const inputForm = ({ target }) => {\n    setSearchInput(target.value);\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={formSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          value={searchInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={inputForm}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","export default function ImageGalleryItem({ arrayImg }) {\r\n  const markup = arrayImg.map(i => {\r\n    return (\r\n      <li className=\"ImageGalleryItem\" key={i.id}>\r\n        <img\r\n          src={i.webformatURL}\r\n          alt={i.tags}\r\n          className=\"ImageGalleryItem-image\"\r\n          data-large={i.largeImageURL}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n  return markup;\r\n}\r\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nexport default function ImageGallery({ arrayImg, openModal }) {\n  return (\n    <ul className=\"ImageGallery\" onClick={openModal}>\n      <ImageGalleryItem arrayImg={arrayImg} />\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  arrayImg: PropTypes.array,\n  openModal: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport LoaderCircle from '../Loader/Loader';\nimport FetchAPI from '../API/API';\n\nexport default function ButtonLoadMore({ searchInput, loadMore }) {\n  const [page, setPage] = useState(1);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n    setLoader(true);\n\n    FetchAPI(searchInput, page)\n      .then(data => loadMore(data.hits))\n      .finally(setLoader(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page]);\n\n  if (loader) {\n    return LoaderCircle();\n  }\n\n  if (!loader) {\n    return (\n      <div className=\"Btn_load-more\">\n        <button\n          className=\"Button\"\n          type=\"button\"\n          onClick={() => setPage(page + 1)}\n        >\n          Load more\n        </button>\n      </div>\n    );\n  }\n}\n\nButtonLoadMore.propTypes = {\n  searchInput: PropTypes.string,\n  loadMore: PropTypes.func,\n};\n","import Loader from 'react-loader-spinner';\r\n\r\nexport default function LoaderCircle() {\r\n  return (\r\n    <div className=\"Loader\">\r\n      <Loader\r\n        type=\"TailSpin\"\r\n        color=\"#00BFFF\"\r\n        height={50}\r\n        width={50}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, children }) {\n  const closeModal = e => {\n    const { target, code } = e;\n\n    if (code === 'Escape') {\n      onClose(closeModal);\n    }\n\n    if (target.nodeName !== 'IMG') {\n      onClose(closeModal);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', closeModal);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={closeModal}>\n      <div className=\"Modal\">{children}</div>\n    </div>,\n    modalRoot,\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SearchBar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport ButtonLoadMore from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nfunction App() {\n  const [arrayImg, setArrayImg] = useState([]);\n  const [modalImg, setModalImg] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [searchInput, setSearchInput] = useState('');\n\n  useEffect(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }, [arrayImg]);\n\n  const onSubmit = ({ arrayImg, searchInput }) => {\n    setArrayImg(arrayImg);\n    setSearchInput(searchInput);\n  };\n\n  const loadMore = moreImg => {\n    setArrayImg([...arrayImg, ...moreImg]);\n  };\n\n  const toggleModal = closeModalEsc => {\n    setShowModal(!showModal);\n    window.removeEventListener('keydown', closeModalEsc);\n  };\n\n  const openModal = e => {\n    const { dataset, nodeName } = e.target;\n\n    if (nodeName === 'IMG') {\n      setModalImg(dataset.large);\n      setShowModal(!showModal);\n    }\n  };\n\n  return (\n    <>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <img src={modalImg} alt=\"\" />\n        </Modal>\n      )}\n      <SearchBar onSubmit={onSubmit} />\n      <ImageGallery arrayImg={arrayImg} openModal={openModal} />\n      {arrayImg.length !== 0 && (\n        <ButtonLoadMore searchInput={searchInput} loadMore={loadMore} />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}